# Task ID: 3
# Title: Implement Session Management
# Status: pending
# Dependencies: 2
# Priority: high
# Description: Add session management capabilities to the WebSocket connection, including session resumption.
# Details:
1. Extend `WebSocketManager` class with session management:
   ```typescript
   import { SessionManager } from '../utils/SessionManager';

   class WebSocketManager {
     private sessionManager: SessionManager;

     constructor(apiKey: string) {
       // ...
       this.sessionManager = new SessionManager();
     }

     async connect() {
       // ...
       const sessionConfig = await this.sessionManager.getSessionConfig();
       // Use sessionConfig in setup message
     }

     private async handleSessionResumption(event: WebSocket.MessageEvent) {
       // Logic to handle session resumption
     }
   }
   ```
2. Implement `SessionManager` class in `src/utils/SessionManager.ts`:
   - Store and retrieve session information
   - Handle session expiration
   - Implement session resumption logic
3. Update connection method to include session information in setup message
4. Implement logic to handle server-initiated session resets
5. Add method to gracefully terminate sessions

# Test Strategy:
1. Unit tests for SessionManager class
2. Integration test for session establishment and resumption
3. Test scenarios for session expiration and reset
4. Verify graceful session termination
