# Task ID: 1
# Title: Project Setup & Core Infrastructure with Tauri and Rust
# Status: pending
# Dependencies: None
# Priority: high
# Description: Initialize frontend (Tauri with React/TypeScript) and backend (Rust with Axum). Set up Docker for containerization, PostgreSQL for structured data, S3 for file storage, and select a cloud provider (e.g., AWS). Establish basic CI/CD pipeline.
# Details:
Frontend: Set up Tauri with React/TypeScript using `npm create tauri-app@latest`. Backend: Create a new Rust project with `cargo new meeting-copilot-backend`, add Axum, sqlx, and aws-sdk-rust dependencies. Docker: Create Dockerfiles for frontend and backend. Database: Define initial schemas for User, Meeting, Transcript, Note, Document, KnowledgeBase using sqlx migrations. Cloud: Set up basic IAM roles, S3 bucket, RDS instance for PostgreSQL. CI/CD: Basic GitHub Actions or Jenkins pipeline for build and test.

# Test Strategy:
Unit tests for basic server setup using Rust's testing framework. Verify successful build and containerization of both Tauri frontend and Rust backend. Confirm database connectivity with sqlx.
