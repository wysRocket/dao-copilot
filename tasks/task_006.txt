# Task ID: 6
# Title: Contextual Information Retrieval from User Documents (Semantic Search)
# Status: pending
# Dependencies: 5
# Priority: medium
# Description: Develop a service for contextual information retrieval. This includes ingesting uploaded documents (parsing text, generating embeddings using models like Sentence Transformers or OpenAI Embeddings), storing embeddings in a vector database (e.g., Pinecone, Weaviate, or pgvector extension for PostgreSQL), and providing an API for semantic search based on user queries during meetings. Retrieval must be explicit and only from user-authorized documents.
# Details:
Backend: Implement document processing pipeline in Rust (e.g., using rust-tika for parsing, rust-bert or OpenAI API for embeddings). Set up and integrate a vector database with Rust bindings. Create API endpoint in Axum (`/search/contextual`) that takes a user query and returns relevant snippets from their documents. Ensure search respects document permissions. Frontend: UI element in React for users to type queries during meetings and view search results.

# Test Strategy:
Unit tests for document parsing, embedding generation, and vector DB interaction in Rust. Integration tests for the end-to-end search flow. Relevance testing of search results. Performance testing for query latency.
