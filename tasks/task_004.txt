# Task ID: 4
# Title: Real-time Audio Transcription Service with Speaker Attribution
# Status: pending
# Dependencies: 3
# Priority: high
# Description: Develop a service to process audio streams from meetings in real-time. Integrate a leading Speech-to-Text (STT) API (e.g., Google Cloud Speech-to-Text, AssemblyAI) or prepare for an on-device model. Implement speaker diarization and attribution. Display transcription with clear visual indicators in the frontend.
# Details:
Backend: Create a transcription service that receives audio chunks. Use WebSocket for real-time communication with the STT API and frontend. Implement logic for speaker diarization (if not provided by STT API, consider libraries like `pyannote.audio` or cloud provider options). Store transcripts linked to meetings and users. Frontend: Display real-time transcriptions, clearly attributing speakers. Implement visual cues for active transcription.

# Test Strategy:
Unit tests for audio chunk processing and STT API interaction. Integration tests with live audio stream. Accuracy testing with diverse accents and noisy environments. Verify speaker attribution accuracy. Test visual indicators in UI.
