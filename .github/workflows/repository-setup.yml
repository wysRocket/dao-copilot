name: Repository Setup

on:
  workflow_dispatch:
  push:
    branches: [master, main]
    paths:
      - '.github/workflows/repository-setup.yml'

jobs:
  setup-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = [
              { name: 'bug', color: 'd73a4a', description: 'Something isn\'t working' },
              { name: 'documentation', color: '0075ca', description: 'Improvements or additions to documentation' },
              { name: 'duplicate', color: 'cfd3d7', description: 'This issue or pull request already exists' },
              { name: 'enhancement', color: 'a2eeef', description: 'New feature or request' },
              { name: 'good first issue', color: '7057ff', description: 'Good for newcomers' },
              { name: 'help wanted', color: '008672', description: 'Extra attention is needed' },
              { name: 'invalid', color: 'e4e669', description: 'This doesn\'t seem right' },
              { name: 'question', color: 'd876e3', description: 'Further information is requested' },
              { name: 'wontfix', color: 'ffffff', description: 'This will not be worked on' },
              { name: 'dependencies', color: '0366d6', description: 'Pull requests that update a dependency file' },
              { name: 'github-actions', color: '2ea043', description: 'Pull requests that update GitHub Actions code' },
              { name: 'automerge', color: '1d76db', description: 'Automatically merge this PR when CI passes' },
              { name: 'priority-high', color: 'b60205', description: 'High priority issue' },
              { name: 'priority-medium', color: 'fbca04', description: 'Medium priority issue' },
              { name: 'priority-low', color: '0e8a16', description: 'Low priority issue' },
              { name: 'type-ci', color: '1f77b4', description: 'Related to CI/CD pipeline' },
              { name: 'type-build', color: 'ff7f0e', description: 'Related to build system' },
              { name: 'type-ui', color: '2ca02c', description: 'Related to user interface' },
              { name: 'type-api', color: 'd62728', description: 'Related to API changes' },
              { name: 'type-performance', color: 'ff1493', description: 'Related to performance improvements' },
              { name: 'type-security', color: '8b0000', description: 'Related to security issues' }
            ];

            for (const label of labels) {
              try {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
                console.log(`Created label: ${label.name}`);
              } catch (error) {
                if (error.status === 422) {
                  // Label already exists, update it
                  await github.rest.issues.updateLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: label.name,
                    color: label.color,
                    description: label.description
                  });
                  console.log(`Updated label: ${label.name}`);
                } else {
                  console.log(`Error with label ${label.name}: ${error.message}`);
                }
              }
            }

  setup-branch-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Branch Protection
        uses: actions/github-script@v7
        with:
          script: |
            // Setup branch protection for master/main branch
            const branch = context.ref.replace('refs/heads/', '');
            
            if (branch === 'master' || branch === 'main') {
              try {
                await github.rest.repos.updateBranchProtection({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  branch: branch,
                  required_status_checks: {
                    strict: true,
                    contexts: ['lint-and-test', 'security-audit']
                  },
                  enforce_admins: false,
                  required_pull_request_reviews: {
                    required_approving_review_count: 1,
                    dismiss_stale_reviews: true,
                    require_code_owner_reviews: false
                  },
                  restrictions: null,
                  allow_force_pushes: false,
                  allow_deletions: false
                });
                console.log(`Branch protection setup for ${branch}`);
              } catch (error) {
                console.log(`Could not setup branch protection: ${error.message}`);
              }
            }

  setup-repository-settings:
    runs-on: ubuntu-latest
    steps:
      - name: Update Repository Settings
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.repos.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                description: 'AI Assistant with Glass UI - Electron-based application for real-time audio transcription and AI assistance',
                homepage: `https://${context.repo.owner}.github.io/${context.repo.repo}`,
                topics: [
                  'electron',
                  'react',
                  'typescript',
                  'ai-assistant',
                  'audio-transcription',
                  'glassmorphism',
                  'gemini-api',
                  'speech-to-text',
                  'desktop-app',
                  'cross-platform'
                ],
                has_issues: true,
                has_projects: true,
                has_wiki: true,
                has_downloads: true,
                allow_squash_merge: true,
                allow_merge_commit: false,
                allow_rebase_merge: true,
                delete_branch_on_merge: true
              });
              console.log('Repository settings updated');
            } catch (error) {
              console.log(`Could not update repository settings: ${error.message}`);
            }
